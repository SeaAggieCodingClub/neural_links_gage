import pygame
import time
import os
import random




pygame.init()



# Get the screen resolution
screen_info = pygame.display.Info()
screen_width, screen_height = screen_info.current_w, screen_info.current_h

# Calculate position for the window to be centered at the top-right
window_width, window_height = 640, 480
top_right_x = screen_width - window_width - 175
top_right_y = 0

# Set environment variable for window position
os.environ['SDL_VIDEO_WINDOW_POS'] = f"{top_right_x},{top_right_y}"


# Do not change this so they will be consistent between games and able to keep room for the Neural Network window
width = 800
height = 650

screen = pygame.display.set_mode((width, height), pygame.NOFRAME)
pygame.display.set_caption('Snake')



dot = pygame.image.load("Pacman/images/dot.png")
wall = pygame.image.load("Pacman/images/wall.png")


# Set clock speed
clock = pygame.time.Clock()

# Color definitions
black = (10, 10, 10)  # Changed to white color for clarity
blue = (32,36,221)

# Menu variables
outside_border = pygame.Rect(10, 15, 200, height - 30)
inside_border = pygame.Rect(15, 20, 190, height - 40)





#grid = {(x, y): 'dot' for x in range(28) for y in range(36)}


grid = {
    (0, 0): 'dot', (0, 1): 'dot', (0, 2): 'dot', (0, 3): 'dot', (0, 4): 'wall', (0, 5): 'wall', (0, 6): 'wall', (0, 7): 'wall', (0, 8): 'wall', (0, 9): 'wall', (0, 10): 'wall', (0, 11): 'wall', (0, 12): 'wall', (0, 13): 'wall', (0, 14): 'dot', (0, 15): 'dot', (0, 16): 'dot', (0, 17): 'dot', (0, 18): 'dot', (0, 19): 'dot', (0, 20): 'dot', (0, 21): 'dot', (0, 22): 'dot', (0, 23): 'dot', (0, 24): 'dot', (0, 25): 'dot', (0, 26): 'dot', (0, 27): 'dot', (0, 28): 'dot', (0, 29): 'dot', (0, 30): 'dot', (0, 31): 'dot', (0, 32): 'dot', (0, 33): 'dot', (0, 34): 'dot', (0, 35): 'dot',
    (1, 0): 'dot', (1, 1): 'dot', (1, 2): 'dot', (1, 3): 'dot', (1, 4): 'wall', (1, 5): 'dot', (1, 6): 'dot', (1, 7): 'dot', (1, 8): 'dot', (1, 9): 'dot', (1, 10): 'dot', (1, 11): 'dot', (1, 12): 'dot', (1, 13): 'dot', (1, 14): 'dot', (1, 15): 'dot', (1, 16): 'dot', (1, 17): 'dot', (1, 18): 'dot', (1, 19): 'dot', (1, 20): 'dot', (1, 21): 'dot', (1, 22): 'dot', (1, 23): 'dot', (1, 24): 'dot', (1, 25): 'dot', (1, 26): 'dot', (1, 27): 'dot', (1, 28): 'dot', (1, 29): 'dot', (1, 30): 'dot', (1, 31): 'dot', (1, 32): 'dot', (1, 33): 'dot', (1, 34): 'dot', (1, 35): 'dot',
    (2, 0): 'dot', (2, 1): 'dot', (2, 2): 'dot', (2, 3): 'dot', (2, 4): 'wall', (2, 5): 'dot', (2, 6): 'wall', (2, 7): 'wall', (2, 8): 'dot', (2, 9): 'dot', (2, 10): 'dot', (2, 11): 'dot', (2, 12): 'dot', (2, 13): 'dot', (2, 14): 'dot', (2, 15): 'dot', (2, 16): 'dot', (2, 17): 'dot', (2, 18): 'dot', (2, 19): 'dot', (2, 20): 'dot', (2, 21): 'dot', (2, 22): 'dot', (2, 23): 'dot', (2, 24): 'dot', (2, 25): 'dot', (2, 26): 'dot', (2, 27): 'dot', (2, 28): 'dot', (2, 29): 'dot', (2, 30): 'dot', (2, 31): 'dot', (2, 32): 'dot', (2, 33): 'dot', (2, 34): 'dot', (2, 35): 'dot',
    (3, 0): 'dot', (3, 1): 'dot', (3, 2): 'dot', (3, 3): 'dot', (3, 4): 'wall', (3, 5): 'dot', (3, 6): 'wall', (3, 7): 'wall', (3, 8): 'dot', (3, 9): 'dot', (3, 10): 'dot', (3, 11): 'dot', (3, 12): 'dot', (3, 13): 'dot', (3, 14): 'dot', (3, 15): 'dot', (3, 16): 'dot', (3, 17): 'dot', (3, 18): 'dot', (3, 19): 'dot', (3, 20): 'dot', (3, 21): 'dot', (3, 22): 'dot', (3, 23): 'dot', (3, 24): 'dot', (3, 25): 'dot', (3, 26): 'dot', (3, 27): 'dot', (3, 28): 'dot', (3, 29): 'dot', (3, 30): 'dot', (3, 31): 'dot', (3, 32): 'dot', (3, 33): 'dot', (3, 34): 'dot', (3, 35): 'dot',
    (4, 0): 'dot', (4, 1): 'dot', (4, 2): 'dot', (4, 3): 'dot', (4, 4): 'wall', (4, 5): 'dot', (4, 6): 'wall', (4, 7): 'wall', (4, 8): 'dot', (4, 9): 'dot', (4, 10): 'dot', (4, 11): 'dot', (4, 12): 'dot', (4, 13): 'dot', (4, 14): 'dot', (4, 15): 'dot', (4, 16): 'dot', (4, 17): 'dot', (4, 18): 'dot', (4, 19): 'dot', (4, 20): 'dot', (4, 21): 'dot', (4, 22): 'dot', (4, 23): 'dot', (4, 24): 'dot', (4, 25): 'dot', (4, 26): 'dot', (4, 27): 'dot', (4, 28): 'dot', (4, 29): 'dot', (4, 30): 'dot', (4, 31): 'dot', (4, 32): 'dot', (4, 33): 'dot', (4, 34): 'dot', (4, 35): 'dot',
    (5, 0): 'dot', (5, 1): 'dot', (5, 2): 'dot', (5, 3): 'dot', (5, 4): 'wall', (5, 5): 'dot', (5, 6): 'dot', (5, 7): 'dot', (5, 8): 'dot', (5, 9): 'dot', (5, 10): 'dot', (5, 11): 'dot', (5, 12): 'dot', (5, 13): 'dot', (5, 14): 'dot', (5, 15): 'dot', (5, 16): 'dot', (5, 17): 'dot', (5, 18): 'dot', (5, 19): 'dot', (5, 20): 'dot', (5, 21): 'dot', (5, 22): 'dot', (5, 23): 'dot', (5, 24): 'dot', (5, 25): 'dot', (5, 26): 'dot', (5, 27): 'dot', (5, 28): 'dot', (5, 29): 'dot', (5, 30): 'dot', (5, 31): 'dot', (5, 32): 'dot', (5, 33): 'dot', (5, 34): 'dot', (5, 35): 'dot',
    (6, 0): 'dot', (6, 1): 'dot', (6, 2): 'dot', (6, 3): 'dot', (6, 4): 'wall', (6, 5): 'dot', (6, 6): 'dot', (6, 7): 'dot', (6, 8): 'dot', (6, 9): 'dot', (6, 10): 'dot', (6, 11): 'dot', (6, 12): 'dot', (6, 13): 'dot', (6, 14): 'dot', (6, 15): 'dot', (6, 16): 'dot', (6, 17): 'dot', (6, 18): 'dot', (6, 19): 'dot', (6, 20): 'dot', (6, 21): 'dot', (6, 22): 'dot', (6, 23): 'dot', (6, 24): 'dot', (6, 25): 'dot', (6, 26): 'dot', (6, 27): 'dot', (6, 28): 'dot', (6, 29): 'dot', (6, 30): 'dot', (6, 31): 'dot', (6, 32): 'dot', (6, 33): 'dot', (6, 34): 'dot', (6, 35): 'dot',
    (7, 0): 'dot', (7, 1): 'dot', (7, 2): 'dot', (7, 3): 'dot', (7, 4): 'wall', (7, 5): 'dot', (7, 6): 'dot', (7, 7): 'dot', (7, 8): 'dot', (7, 9): 'dot', (7, 10): 'dot', (7, 11): 'dot', (7, 12): 'dot', (7, 13): 'dot', (7, 14): 'dot', (7, 15): 'dot', (7, 16): 'dot', (7, 17): 'dot', (7, 18): 'dot', (7, 19): 'dot', (7, 20): 'dot', (7, 21): 'dot', (7, 22): 'dot', (7, 23): 'dot', (7, 24): 'dot', (7, 25): 'dot', (7, 26): 'dot', (7, 27): 'dot', (7, 28): 'dot', (7, 29): 'dot', (7, 30): 'dot', (7, 31): 'dot', (7, 32): 'dot', (7, 33): 'dot', (7, 34): 'dot', (7, 35): 'dot',
    (8, 0): 'dot', (8, 1): 'dot', (8, 2): 'dot', (8, 3): 'dot', (8, 4): 'wall', (8, 5): 'dot', (8, 6): 'dot', (8, 7): 'dot', (8, 8): 'dot', (8, 9): 'dot', (8, 10): 'dot', (8, 11): 'dot', (8, 12): 'dot', (8, 13): 'dot', (8, 14): 'dot', (8, 15): 'dot', (8, 16): 'dot', (8, 17): 'dot', (8, 18): 'dot', (8, 19): 'dot', (8, 20): 'dot', (8, 21): 'dot', (8, 22): 'dot', (8, 23): 'dot', (8, 24): 'dot', (8, 25): 'dot', (8, 26): 'dot', (8, 27): 'dot', (8, 28): 'dot', (8, 29): 'dot', (8, 30): 'dot', (8, 31): 'dot', (8, 32): 'dot', (8, 33): 'dot', (8, 34): 'dot', (8, 35): 'dot',
    (9, 0): 'dot', (9, 1): 'dot', (9, 2): 'dot', (9, 3): 'dot', (9, 4): 'wall', (9, 5): 'dot', (9, 6): 'dot', (9, 7): 'dot', (9, 8): 'dot', (9, 9): 'dot', (9, 10): 'dot', (9, 11): 'dot', (9, 12): 'dot', (9, 13): 'dot', (9, 14): 'dot', (9, 15): 'dot', (9, 16): 'dot', (9, 17): 'dot', (9, 18): 'dot', (9, 19): 'dot', (9, 20): 'dot', (9, 21): 'dot', (9, 22): 'dot', (9, 23): 'dot', (9, 24): 'dot', (9, 25): 'dot', (9, 26): 'dot', (9, 27): 'dot', (9, 28): 'dot', (9, 29): 'dot', (9, 30): 'dot', (9, 31): 'dot', (9, 32): 'dot', (9, 33): 'dot', (9, 34): 'dot', (9, 35): 'dot',
    (10, 0): 'dot', (10, 1): 'dot', (10, 2): 'dot', (10, 3): 'dot', (10, 4): 'wall', (10, 5): 'dot', (10, 6): 'dot', (10, 7): 'dot', (10, 8): 'dot', (10, 9): 'dot', (10, 10): 'dot', (10, 11): 'dot', (10, 12): 'dot', (10, 13): 'dot', (10, 14): 'dot', (10, 15): 'dot', (10, 16): 'dot', (10, 17): 'dot', (10, 18): 'dot', (10, 19): 'dot', (10, 20): 'dot', (10, 21): 'dot', (10, 22): 'dot', (10, 23): 'dot', (10, 24): 'dot', (10, 25): 'dot', (10, 26): 'dot', (10, 27): 'dot', (10, 28): 'dot', (10, 29): 'dot', (10, 30): 'dot', (10, 31): 'dot', (10, 32): 'dot', (10, 33): 'dot', (10, 34): 'dot', (10, 35): 'dot',
    (11, 0): 'dot', (11, 1): 'dot', (11, 2): 'dot', (11, 3): 'dot', (11, 4): 'wall', (11, 5): 'dot', (11, 6): 'dot', (11, 7): 'dot', (11, 8): 'dot', (11, 9): 'dot', (11, 10): 'dot', (11, 11): 'dot', (11, 12): 'dot', (11, 13): 'dot', (11, 14): 'dot', (11, 15): 'dot', (11, 16): 'dot', (11, 17): 'dot', (11, 18): 'dot', (11, 19): 'dot', (11, 20): 'dot', (11, 21): 'dot', (11, 22): 'dot', (11, 23): 'dot', (11, 24): 'dot', (11, 25): 'dot', (11, 26): 'dot', (11, 27): 'dot', (11, 28): 'dot', (11, 29): 'dot', (11, 30): 'dot', (11, 31): 'dot', (11, 32): 'dot', (11, 33): 'dot', (11, 34): 'dot', (11, 35): 'dot',
    (12, 0): 'dot', (12, 1): 'dot', (12, 2): 'dot', (12, 3): 'dot', (12, 4): 'wall', (12, 5): 'dot', (12, 6): 'dot', (12, 7): 'dot', (12, 8): 'dot', (12, 9): 'dot', (12, 10): 'dot', (12, 11): 'dot', (12, 12): 'dot', (12, 13): 'dot', (12, 14): 'dot', (12, 15): 'dot', (12, 16): 'dot', (12, 17): 'dot', (12, 18): 'dot', (12, 19): 'dot', (12, 20): 'dot', (12, 21): 'dot', (12, 22): 'dot', (12, 23): 'dot', (12, 24): 'dot', (12, 25): 'dot', (12, 26): 'dot', (12, 27): 'dot', (12, 28): 'dot', (12, 29): 'dot', (12, 30): 'dot', (12, 31): 'dot', (12, 32): 'dot', (12, 33): 'dot', (12, 34): 'dot', (12, 35): 'dot',
    (13, 0): 'dot', (13, 1): 'dot', (13, 2): 'dot', (13, 3): 'dot', (13, 4): 'wall', (13, 5): 'wall', (13, 6): 'wall', (13, 7): 'wall', (13, 8): 'wall', (13, 9): 'dot', (13, 10): 'dot', (13, 11): 'dot', (13, 12): 'dot', (13, 13): 'dot', (13, 14): 'dot', (13, 15): 'dot', (13, 16): 'dot', (13, 17): 'dot', (13, 18): 'dot', (13, 19): 'dot', (13, 20): 'dot', (13, 21): 'dot', (13, 22): 'dot', (13, 23): 'dot', (13, 24): 'dot', (13, 25): 'dot', (13, 26): 'dot', (13, 27): 'dot', (13, 28): 'dot', (13, 29): 'dot', (13, 30): 'dot', (13, 31): 'dot', (13, 32): 'dot', (13, 33): 'dot', (13, 34): 'dot', (13, 35): 'dot',
    (14, 0): 'dot', (14, 1): 'dot', (14, 2): 'dot', (14, 3): 'dot', (14, 4): 'wall', (14, 5): 'wall', (14, 6): 'wall', (14, 7): 'wall', (14, 8): 'wall', (14, 9): 'dot', (14, 10): 'dot', (14, 11): 'dot', (14, 12): 'dot', (14, 13): 'dot', (14, 14): 'dot', (14, 15): 'dot', (14, 16): 'dot', (14, 17): 'dot', (14, 18): 'dot', (14, 19): 'dot', (14, 20): 'dot', (14, 21): 'dot', (14, 22): 'dot', (14, 23): 'dot', (14, 24): 'dot', (14, 25): 'dot', (14, 26): 'dot', (14, 27): 'dot', (14, 28): 'dot', (14, 29): 'dot', (14, 30): 'dot', (14, 31): 'dot', (14, 32): 'dot', (14, 33): 'dot', (14, 34): 'dot', (14, 35): 'dot',
    (15, 0): 'dot', (15, 1): 'dot', (15, 2): 'dot', (15, 3): 'dot', (15, 4): 'wall', (15, 5): 'dot', (15, 6): 'dot', (15, 7): 'dot', (15, 8): 'dot', (15, 9): 'dot', (15, 10): 'dot', (15, 11): 'dot', (15, 12): 'dot', (15, 13): 'dot', (15, 14): 'dot', (15, 15): 'dot', (15, 16): 'dot', (15, 17): 'dot', (15, 18): 'dot', (15, 19): 'dot', (15, 20): 'dot', (15, 21): 'dot', (15, 22): 'dot', (15, 23): 'dot', (15, 24): 'dot', (15, 25): 'dot', (15, 26): 'dot', (15, 27): 'dot', (15, 28): 'dot', (15, 29): 'dot', (15, 30): 'dot', (15, 31): 'dot', (15, 32): 'dot', (15, 33): 'dot', (15, 34): 'dot', (15, 35): 'dot',
    (16, 0): 'dot', (16, 1): 'dot', (16, 2): 'dot', (16, 3): 'dot', (16, 4): 'wall', (16, 5): 'dot', (16, 6): 'dot', (16, 7): 'dot', (16, 8): 'dot', (16, 9): 'dot', (16, 10): 'dot', (16, 11): 'dot', (16, 12): 'dot', (16, 13): 'dot', (16, 14): 'dot', (16, 15): 'dot', (16, 16): 'dot', (16, 17): 'dot', (16, 18): 'dot', (16, 19): 'dot', (16, 20): 'dot', (16, 21): 'dot', (16, 22): 'dot', (16, 23): 'dot', (16, 24): 'dot', (16, 25): 'dot', (16, 26): 'dot', (16, 27): 'dot', (16, 28): 'dot', (16, 29): 'dot', (16, 30): 'dot', (16, 31): 'dot', (16, 32): 'dot', (16, 33): 'dot', (16, 34): 'dot', (16, 35): 'dot',
    (17, 0): 'dot', (17, 1): 'dot', (17, 2): 'dot', (17, 3): 'dot', (17, 4): 'wall', (17, 5): 'dot', (17, 6): 'dot', (17, 7): 'dot', (17, 8): 'dot', (17, 9): 'dot', (17, 10): 'dot', (17, 11): 'dot', (17, 12): 'dot', (17, 13): 'dot', (17, 14): 'dot', (17, 15): 'dot', (17, 16): 'dot', (17, 17): 'dot', (17, 18): 'dot', (17, 19): 'dot', (17, 20): 'dot', (17, 21): 'dot', (17, 22): 'dot', (17, 23): 'dot', (17, 24): 'dot', (17, 25): 'dot', (17, 26): 'dot', (17, 27): 'dot', (17, 28): 'dot', (17, 29): 'dot', (17, 30): 'dot', (17, 31): 'dot', (17, 32): 'dot', (17, 33): 'dot', (17, 34): 'dot', (17, 35): 'dot',
    (18, 0): 'dot', (18, 1): 'dot', (18, 2): 'dot', (18, 3): 'dot', (18, 4): 'wall', (18, 5): 'dot', (18, 6): 'dot', (18, 7): 'dot', (18, 8): 'dot', (18, 9): 'dot', (18, 10): 'dot', (18, 11): 'dot', (18, 12): 'dot', (18, 13): 'dot', (18, 14): 'dot', (18, 15): 'dot', (18, 16): 'dot', (18, 17): 'dot', (18, 18): 'dot', (18, 19): 'dot', (18, 20): 'dot', (18, 21): 'dot', (18, 22): 'dot', (18, 23): 'dot', (18, 24): 'dot', (18, 25): 'dot', (18, 26): 'dot', (18, 27): 'dot', (18, 28): 'dot', (18, 29): 'dot', (18, 30): 'dot', (18, 31): 'dot', (18, 32): 'dot', (18, 33): 'dot', (18, 34): 'dot', (18, 35): 'dot',
    (19, 0): 'dot', (19, 1): 'dot', (19, 2): 'dot', (19, 3): 'dot', (19, 4): 'wall', (19, 5): 'dot', (19, 6): 'dot', (19, 7): 'dot', (19, 8): 'dot', (19, 9): 'dot', (19, 10): 'dot', (19, 11): 'dot', (19, 12): 'dot', (19, 13): 'dot', (19, 14): 'dot', (19, 15): 'dot', (19, 16): 'dot', (19, 17): 'dot', (19, 18): 'dot', (19, 19): 'dot', (19, 20): 'dot', (19, 21): 'dot', (19, 22): 'dot', (19, 23): 'dot', (19, 24): 'dot', (19, 25): 'dot', (19, 26): 'dot', (19, 27): 'dot', (19, 28): 'dot', (19, 29): 'dot', (19, 30): 'dot', (19, 31): 'dot', (19, 32): 'dot', (19, 33): 'dot', (19, 34): 'dot', (19, 35): 'dot',
    (20, 0): 'dot', (20, 1): 'dot', (20, 2): 'dot', (20, 3): 'dot', (20, 4): 'wall', (20, 5): 'dot', (20, 6): 'dot', (20, 7): 'dot', (20, 8): 'dot', (20, 9): 'dot', (20, 10): 'dot', (20, 11): 'dot', (20, 12): 'dot', (20, 13): 'dot', (20, 14): 'dot', (20, 15): 'dot', (20, 16): 'dot', (20, 17): 'dot', (20, 18): 'dot', (20, 19): 'dot', (20, 20): 'dot', (20, 21): 'dot', (20, 22): 'dot', (20, 23): 'dot', (20, 24): 'dot', (20, 25): 'dot', (20, 26): 'dot', (20, 27): 'dot', (20, 28): 'dot', (20, 29): 'dot', (20, 30): 'dot', (20, 31): 'dot', (20, 32): 'dot', (20, 33): 'dot', (20, 34): 'dot', (20, 35): 'dot',
    (21, 0): 'dot', (21, 1): 'dot', (21, 2): 'dot', (21, 3): 'dot', (21, 4): 'wall', (21, 5): 'dot', (21, 6): 'dot', (21, 7): 'dot', (21, 8): 'dot', (21, 9): 'dot', (21, 10): 'dot', (21, 11): 'dot', (21, 12): 'dot', (21, 13): 'dot', (21, 14): 'dot', (21, 15): 'dot', (21, 16): 'dot', (21, 17): 'dot', (21, 18): 'dot', (21, 19): 'dot', (21, 20): 'dot', (21, 21): 'dot', (21, 22): 'dot', (21, 23): 'dot', (21, 24): 'dot', (21, 25): 'dot', (21, 26): 'dot', (21, 27): 'dot', (21, 28): 'dot', (21, 29): 'dot', (21, 30): 'dot', (21, 31): 'dot', (21, 32): 'dot', (21, 33): 'dot', (21, 34): 'dot', (21, 35): 'dot',
    (22, 0): 'dot', (22, 1): 'dot', (22, 2): 'dot', (22, 3): 'dot', (22, 4): 'wall', (22, 5): 'dot', (22, 6): 'dot', (22, 7): 'dot', (22, 8): 'dot', (22, 9): 'dot', (22, 10): 'dot', (22, 11): 'dot', (22, 12): 'dot', (22, 13): 'dot', (22, 14): 'dot', (22, 15): 'dot', (22, 16): 'dot', (22, 17): 'dot', (22, 18): 'dot', (22, 19): 'dot', (22, 20): 'dot', (22, 21): 'dot', (22, 22): 'dot', (22, 23): 'dot', (22, 24): 'dot', (22, 25): 'dot', (22, 26): 'dot', (22, 27): 'dot', (22, 28): 'dot', (22, 29): 'dot', (22, 30): 'dot', (22, 31): 'dot', (22, 32): 'dot', (22, 33): 'dot', (22, 34): 'dot', (22, 35): 'dot',
    (23, 0): 'dot', (23, 1): 'dot', (23, 2): 'dot', (23, 3): 'dot', (23, 4): 'wall', (23, 5): 'dot', (23, 6): 'wall', (23, 7): 'wall', (23, 8): 'dot', (23, 9): 'dot', (23, 10): 'dot', (23, 11): 'dot', (23, 12): 'dot', (23, 13): 'dot', (23, 14): 'dot', (23, 15): 'dot', (23, 16): 'dot', (23, 17): 'dot', (23, 18): 'dot', (23, 19): 'dot', (23, 20): 'dot', (23, 21): 'dot', (23, 22): 'dot', (23, 23): 'dot', (23, 24): 'dot', (23, 25): 'dot', (23, 26): 'dot', (23, 27): 'dot', (23, 28): 'dot', (23, 29): 'dot', (23, 30): 'dot', (23, 31): 'dot', (23, 32): 'dot', (23, 33): 'dot', (23, 34): 'dot', (23, 35): 'dot',
    (24, 0): 'dot', (24, 1): 'dot', (24, 2): 'dot', (24, 3): 'dot', (24, 4): 'wall', (24, 5): 'dot', (24, 6): 'wall', (24, 7): 'wall', (24, 8): 'dot', (24, 9): 'dot', (24, 10): 'dot', (24, 11): 'dot', (24, 12): 'dot', (24, 13): 'dot', (24, 14): 'dot', (24, 15): 'dot', (24, 16): 'dot', (24, 17): 'dot', (24, 18): 'dot', (24, 19): 'dot', (24, 20): 'dot', (24, 21): 'dot', (24, 22): 'dot', (24, 23): 'dot', (24, 24): 'dot', (24, 25): 'dot', (24, 26): 'dot', (24, 27): 'dot', (24, 28): 'dot', (24, 29): 'dot', (24, 30): 'dot', (24, 31): 'dot', (24, 32): 'dot', (24, 33): 'dot', (24, 34): 'dot', (24, 35): 'dot',
    (25, 0): 'dot', (25, 1): 'dot', (25, 2): 'dot', (25, 3): 'dot', (25, 4): 'wall', (25, 5): 'dot', (25, 6): 'wall', (25, 7): 'wall', (25, 8): 'dot', (25, 9): 'dot', (25, 10): 'dot', (25, 11): 'dot', (25, 12): 'dot', (25, 13): 'dot', (25, 14): 'dot', (25, 15): 'dot', (25, 16): 'dot', (25, 17): 'dot', (25, 18): 'dot', (25, 19): 'dot', (25, 20): 'dot', (25, 21): 'dot', (25, 22): 'dot', (25, 23): 'dot', (25, 24): 'dot', (25, 25): 'dot', (25, 26): 'dot', (25, 27): 'dot', (25, 28): 'dot', (25, 29): 'dot', (25, 30): 'dot', (25, 31): 'dot', (25, 32): 'dot', (25, 33): 'dot', (25, 34): 'dot', (25, 35): 'dot',
    (26, 0): 'dot', (26, 1): 'dot', (26, 2): 'dot', (26, 3): 'dot', (26, 4): 'wall', (26, 5): 'dot', (26, 6): 'dot', (26, 7): 'dot', (26, 8): 'dot', (26, 9): 'dot', (26, 10): 'dot', (26, 11): 'dot', (26, 12): 'dot', (26, 13): 'dot', (26, 14): 'dot', (26, 15): 'dot', (26, 16): 'dot', (26, 17): 'dot', (26, 18): 'dot', (26, 19): 'dot', (26, 20): 'dot', (26, 21): 'dot', (26, 22): 'dot', (26, 23): 'dot', (26, 24): 'dot', (26, 25): 'dot', (26, 26): 'dot', (26, 27): 'dot', (26, 28): 'dot', (26, 29): 'dot', (26, 30): 'dot', (26, 31): 'dot', (26, 32): 'dot', (26, 33): 'dot', (26, 34): 'dot', (26, 35): 'dot',
    (27, 0): 'dot', (27, 1): 'dot', (27, 2): 'dot', (27, 3): 'dot', (27, 4): 'wall', (27, 5): 'wall', (27, 6): 'wall', (27, 7): 'wall', (27, 8): 'wall', (27, 9): 'wall', (27, 10): 'wall', (27, 11): 'wall', (27, 12): 'wall', (27, 13): 'wall', (27, 14): 'dot', (27, 15): 'dot', (27, 16): 'dot', (27, 17): 'dot', (27, 18): 'dot', (27, 19): 'dot', (27, 20): 'dot', (27, 21): 'dot', (27, 22): 'dot', (27, 23): 'dot', (27, 24): 'dot', (27, 25): 'dot', (27, 26): 'dot', (27, 27): 'dot', (27, 28): 'dot', (27, 29): 'dot', (27, 30): 'dot', (27, 31): 'dot', (27, 32): 'dot', (27, 33): 'dot', (27, 34): 'dot', (27, 35): 'dot',
}







def check_escape():
    keys = pygame.key.get_pressed()
    if keys[pygame.K_ESCAPE]:
        pygame.quit()
        exit()


def menu():
    screen.fill((0, 0, 0))  # Clear the screen with a black background
    
    pygame.draw.rect(screen, blue, outside_border, border_radius=15)
    pygame.draw.rect(screen, black, inside_border, border_radius=15)
    


def find_cordinates(x,y):
      px = (18*x) + 250
      py = (18*y)+ 0
      return px,py


def run_graph(level):
      for key in level:
            x,y = key
            
            if key == (x,y):
                px,py = find_cordinates(key[0],key[1])
                if level[(x,y)] == 'dot':
                    screen.blit(dot,(px,py))
                if level[(x,y)] == 'wall':
                    screen.blit(wall,(px,py))


def __main__():
    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        # Draw menu and check for escape
        menu()
        check_escape()
        run_graph(grid)

        # Update the display
        pygame.display.flip()

        # Cap the frame rate
        clock.tick(30)  # Adjust as necessary for smoothness

    pygame.quit()


__main__()